// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.Evals
{
    internal partial class InternalEvalRunPerModelUsage
    {
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        internal InternalEvalRunPerModelUsage(string modelName, int invocationCount, int promptTokens, int completionTokens, int totalTokens, int cachedTokens)
        {
            ModelName = modelName;
            InvocationCount = invocationCount;
            PromptTokens = promptTokens;
            CompletionTokens = completionTokens;
            TotalTokens = totalTokens;
            CachedTokens = cachedTokens;
        }

        internal InternalEvalRunPerModelUsage(string modelName, int invocationCount, int promptTokens, int completionTokens, int totalTokens, int cachedTokens, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ModelName = modelName;
            InvocationCount = invocationCount;
            PromptTokens = promptTokens;
            CompletionTokens = completionTokens;
            TotalTokens = totalTokens;
            CachedTokens = cachedTokens;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        public string ModelName { get; }

        public int InvocationCount { get; }

        public int PromptTokens { get; }

        public int CompletionTokens { get; }

        public int TotalTokens { get; }

        public int CachedTokens { get; }

        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
