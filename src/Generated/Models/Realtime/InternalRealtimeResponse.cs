// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using OpenAI;

namespace OpenAI.Realtime
{
    internal partial class InternalRealtimeResponse
    {
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        internal InternalRealtimeResponse(IDictionary<string, string> metadata)
        {
            // Plugin customization: ensure initialization of collections
            Output = new ChangeTrackingList<RealtimeItem>();
            Metadata = metadata ?? new ChangeTrackingDictionary<string, string>();
            Modalities = new ChangeTrackingList<InternalRealtimeResponseModality>();
        }

        internal InternalRealtimeResponse(string id, string @object, ConversationStatus? status, ConversationStatusDetails statusDetails, IReadOnlyList<RealtimeItem> output, IDictionary<string, string> metadata, ConversationTokenUsage usage, string conversationId, ConversationVoice? voice, IReadOnlyList<InternalRealtimeResponseModality> modalities, RealtimeAudioFormat? outputAudioFormat, float? temperature, BinaryData maxOutputTokens, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            // Plugin customization: ensure initialization of collections
            Id = id;
            Object = @object;
            Status = status;
            StatusDetails = statusDetails;
            Output = output ?? new ChangeTrackingList<RealtimeItem>();
            Metadata = metadata ?? new ChangeTrackingDictionary<string, string>();
            Usage = usage;
            ConversationId = conversationId;
            Voice = voice;
            Modalities = modalities ?? new ChangeTrackingList<InternalRealtimeResponseModality>();
            OutputAudioFormat = outputAudioFormat;
            Temperature = temperature;
            MaxOutputTokens = maxOutputTokens;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        public string Id { get; }

        public string Object { get; }

        public ConversationStatus? Status { get; }

        public ConversationStatusDetails StatusDetails { get; }

        public IDictionary<string, string> Metadata { get; }

        public ConversationTokenUsage Usage { get; }

        public string ConversationId { get; }

        public float? Temperature { get; }

        public BinaryData MaxOutputTokens { get; }

        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
