// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Realtime
{
    internal readonly partial struct InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel : IEquatable<InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel>
    {
        private readonly string _value;
        private const string Gpt4oTranscribeValue = "gpt-4o-transcribe";
        private const string Gpt4oMiniTranscribeValue = "gpt-4o-mini-transcribe";
        private const string Whisper1Value = "whisper-1";

        public InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel Gpt4oTranscribe { get; } = new InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel(Gpt4oTranscribeValue);

        internal static InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel Gpt4oMiniTranscribe { get; } = new InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel(Gpt4oMiniTranscribeValue);

        internal static InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel Whisper1 { get; } = new InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel(Whisper1Value);

        public static bool operator ==(InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel left, InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel right) => left.Equals(right);

        public static bool operator !=(InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel left, InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel right) => !left.Equals(right);

        public static implicit operator InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel(string value) => new InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel other && Equals(other);

        public bool Equals(InternalRealtimeTranscriptionSessionCreateResponseInputAudioTranscriptionModel other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
