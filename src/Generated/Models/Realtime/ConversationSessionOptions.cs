// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using OpenAI;

namespace OpenAI.Realtime
{
    [Experimental("OPENAI002")]
    public partial class ConversationSessionOptions
    {
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        public ConversationSessionOptions() : this(null, default, default, null, default, default, default, null, null, null, null, null, null, null)
        {
        }

        internal ConversationSessionOptions(string instructions, RealtimeAudioFormat? inputAudioFormat, RealtimeAudioFormat? outputAudioFormat, IList<ConversationTool> tools, float? temperature, ConversationVoice? voice, InternalRealtimeRequestSessionModel? model, TurnDetectionOptions turnDetectionOptions, InputTranscriptionOptions inputTranscriptionOptions, InputNoiseReductionOptions inputNoiseReductionOptions, IList<InternalRealtimeRequestSessionModality> internalModalities, BinaryData internalToolChoice, BinaryData maxResponseOutputTokens, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            // Plugin customization: ensure initialization of collections
            Instructions = instructions;
            InputAudioFormat = inputAudioFormat;
            OutputAudioFormat = outputAudioFormat;
            Tools = tools ?? new ChangeTrackingList<ConversationTool>();
            Temperature = temperature;
            Voice = voice;
            Model = model;
            TurnDetectionOptions = turnDetectionOptions;
            InputTranscriptionOptions = inputTranscriptionOptions;
            InputNoiseReductionOptions = inputNoiseReductionOptions;
            _internalModalities = internalModalities ?? new ChangeTrackingList<InternalRealtimeRequestSessionModality>();
            _internalToolChoice = internalToolChoice;
            _maxResponseOutputTokens = maxResponseOutputTokens;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        public string Instructions { get; set; }

        public RealtimeAudioFormat? InputAudioFormat { get; set; }

        public RealtimeAudioFormat? OutputAudioFormat { get; set; }

        public IList<ConversationTool> Tools { get; }

        public float? Temperature { get; set; }

        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
