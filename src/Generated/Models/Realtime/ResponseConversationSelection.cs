// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using OpenAI;

namespace OpenAI.Realtime
{
    [Experimental("OPENAI002")]
    public readonly partial struct ResponseConversationSelection : IEquatable<ResponseConversationSelection>
    {
        private readonly string _value;
        private const string AutoValue = "auto";
        private const string NoneValue = "none";

        public ResponseConversationSelection(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        public static ResponseConversationSelection Auto { get; } = new ResponseConversationSelection(AutoValue);

        public static ResponseConversationSelection None { get; } = new ResponseConversationSelection(NoneValue);

        public static bool operator ==(ResponseConversationSelection left, ResponseConversationSelection right) => left.Equals(right);

        public static bool operator !=(ResponseConversationSelection left, ResponseConversationSelection right) => !left.Equals(right);

        public static implicit operator ResponseConversationSelection(string value) => new ResponseConversationSelection(value);

        public static implicit operator ResponseConversationSelection?(string value) => value == null ? null : new ResponseConversationSelection(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ResponseConversationSelection other && Equals(other);

        public bool Equals(ResponseConversationSelection other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
