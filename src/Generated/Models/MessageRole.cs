// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Responses
{
    public readonly partial struct MessageRole : IEquatable<MessageRole>
    {
        private readonly string _value;
        private const string SystemValue = "system";
        private const string DeveloperValue = "developer";
        private const string UserValue = "user";
        private const string AssistantValue = "assistant";

        public MessageRole(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        public static MessageRole System { get; } = new MessageRole(SystemValue);

        public static MessageRole Developer { get; } = new MessageRole(DeveloperValue);

        public static MessageRole User { get; } = new MessageRole(UserValue);

        public static MessageRole Assistant { get; } = new MessageRole(AssistantValue);

        public static bool operator ==(MessageRole left, MessageRole right) => left.Equals(right);

        public static bool operator !=(MessageRole left, MessageRole right) => !left.Equals(right);

        public static implicit operator MessageRole(string value) => new MessageRole(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MessageRole other && Equals(other);

        public bool Equals(MessageRole other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
