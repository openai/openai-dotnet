// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using OpenAI;

namespace OpenAI.Responses
{
    [Experimental("OPENAI001")]
    public readonly partial struct ImageGenerationToolModerationLevel : IEquatable<ImageGenerationToolModerationLevel>
    {
        private readonly string _value;
        private const string AutoValue = "auto";
        private const string LowValue = "low";

        public ImageGenerationToolModerationLevel(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        public static ImageGenerationToolModerationLevel Auto { get; } = new ImageGenerationToolModerationLevel(AutoValue);

        public static ImageGenerationToolModerationLevel Low { get; } = new ImageGenerationToolModerationLevel(LowValue);

        public static bool operator ==(ImageGenerationToolModerationLevel left, ImageGenerationToolModerationLevel right) => left.Equals(right);

        public static bool operator !=(ImageGenerationToolModerationLevel left, ImageGenerationToolModerationLevel right) => !left.Equals(right);

        public static implicit operator ImageGenerationToolModerationLevel(string value) => new ImageGenerationToolModerationLevel(value);

        public static implicit operator ImageGenerationToolModerationLevel?(string value) => value == null ? null : new ImageGenerationToolModerationLevel(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ImageGenerationToolModerationLevel other && Equals(other);

        public bool Equals(ImageGenerationToolModerationLevel other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
