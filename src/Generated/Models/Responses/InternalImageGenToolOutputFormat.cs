// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Responses
{
    internal readonly partial struct InternalImageGenToolOutputFormat : IEquatable<InternalImageGenToolOutputFormat>
    {
        private readonly string _value;
        private const string PngValue = "png";
        private const string WebpValue = "webp";
        private const string JpegValue = "jpeg";

        public InternalImageGenToolOutputFormat(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalImageGenToolOutputFormat Png { get; } = new InternalImageGenToolOutputFormat(PngValue);

        internal static InternalImageGenToolOutputFormat Webp { get; } = new InternalImageGenToolOutputFormat(WebpValue);

        internal static InternalImageGenToolOutputFormat Jpeg { get; } = new InternalImageGenToolOutputFormat(JpegValue);

        public static bool operator ==(InternalImageGenToolOutputFormat left, InternalImageGenToolOutputFormat right) => left.Equals(right);

        public static bool operator !=(InternalImageGenToolOutputFormat left, InternalImageGenToolOutputFormat right) => !left.Equals(right);

        public static implicit operator InternalImageGenToolOutputFormat(string value) => new InternalImageGenToolOutputFormat(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalImageGenToolOutputFormat other && Equals(other);

        public bool Equals(InternalImageGenToolOutputFormat other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
