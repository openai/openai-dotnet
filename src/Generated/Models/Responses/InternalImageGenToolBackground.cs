// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Responses
{
    internal readonly partial struct InternalImageGenToolBackground : IEquatable<InternalImageGenToolBackground>
    {
        private readonly string _value;
        private const string TransparentValue = "transparent";
        private const string OpaqueValue = "opaque";
        private const string AutoValue = "auto";

        public InternalImageGenToolBackground(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalImageGenToolBackground Transparent { get; } = new InternalImageGenToolBackground(TransparentValue);

        internal static InternalImageGenToolBackground Opaque { get; } = new InternalImageGenToolBackground(OpaqueValue);

        internal static InternalImageGenToolBackground Auto { get; } = new InternalImageGenToolBackground(AutoValue);

        public static bool operator ==(InternalImageGenToolBackground left, InternalImageGenToolBackground right) => left.Equals(right);

        public static bool operator !=(InternalImageGenToolBackground left, InternalImageGenToolBackground right) => !left.Equals(right);

        public static implicit operator InternalImageGenToolBackground(string value) => new InternalImageGenToolBackground(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalImageGenToolBackground other && Equals(other);

        public bool Equals(InternalImageGenToolBackground other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
