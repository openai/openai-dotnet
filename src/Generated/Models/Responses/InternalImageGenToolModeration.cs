// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Responses
{
    internal readonly partial struct InternalImageGenToolModeration : IEquatable<InternalImageGenToolModeration>
    {
        private readonly string _value;
        private const string AutoValue = "auto";
        private const string LowValue = "low";

        public InternalImageGenToolModeration(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalImageGenToolModeration Auto { get; } = new InternalImageGenToolModeration(AutoValue);

        internal static InternalImageGenToolModeration Low { get; } = new InternalImageGenToolModeration(LowValue);

        public static bool operator ==(InternalImageGenToolModeration left, InternalImageGenToolModeration right) => left.Equals(right);

        public static bool operator !=(InternalImageGenToolModeration left, InternalImageGenToolModeration right) => !left.Equals(right);

        public static implicit operator InternalImageGenToolModeration(string value) => new InternalImageGenToolModeration(value);

        public static implicit operator InternalImageGenToolModeration?(string value) => value == null ? null : new InternalImageGenToolModeration(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalImageGenToolModeration other && Equals(other);

        public bool Equals(InternalImageGenToolModeration other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
