// <auto-generated/>

#nullable disable

using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using OpenAI;

namespace OpenAI.Chat
{
    [Experimental("OPENAI001")]
    public partial class ChatCompletionMessageListDatum
    {
        [Experimental("SCME0001")]
        private JsonPatch _patch;

        internal ChatCompletionMessageListDatum(string content, string refusal, ChatMessageRole role, string id)
        {
            Content = content;
            Refusal = refusal;
            ToolCalls = new ChangeTrackingList<ChatToolCall>();
            Annotations = new ChangeTrackingList<ChatMessageAnnotation>();
            Role = role;
            Id = id;
        }

#pragma warning disable SCME0001 // Type is for evaluation purposes only and is subject to change or removal in future updates.
        internal ChatCompletionMessageListDatum(string content, string refusal, IReadOnlyList<ChatToolCall> toolCalls, IReadOnlyList<ChatMessageAnnotation> annotations, ChatMessageRole role, InternalChatCompletionResponseMessageFunctionCall functionCall, ChatOutputAudio outputAudio, string id, in JsonPatch patch)
        {
            // Plugin customization: ensure initialization of collections
            Content = content;
            Refusal = refusal;
            ToolCalls = toolCalls ?? new ChangeTrackingList<ChatToolCall>();
            Annotations = annotations ?? new ChangeTrackingList<ChatMessageAnnotation>();
            Role = role;
            FunctionCall = functionCall;
            OutputAudio = outputAudio;
            Id = id;
            _patch = patch;
            _patch.SetPropagators(PropagateSet, PropagateGet);
        }
#pragma warning restore SCME0001 // Type is for evaluation purposes only and is subject to change or removal in future updates.

        [EditorBrowsable(EditorBrowsableState.Never)]
        [Experimental("SCME0001")]
        public ref JsonPatch Patch => ref _patch;

        public string Content { get; }

        public string Refusal { get; }

        public IReadOnlyList<ChatToolCall> ToolCalls { get; }

        public IReadOnlyList<ChatMessageAnnotation> Annotations { get; }

        internal InternalChatCompletionResponseMessageFunctionCall FunctionCall { get; }

        public string Id { get; }
    }
}
