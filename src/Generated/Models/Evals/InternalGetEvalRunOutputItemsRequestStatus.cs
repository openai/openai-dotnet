// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Evals
{
    internal readonly partial struct InternalGetEvalRunOutputItemsRequestStatus : IEquatable<InternalGetEvalRunOutputItemsRequestStatus>
    {
        private readonly string _value;
        private const string FailValue = "fail";
        private const string PassValue = "pass";

        public InternalGetEvalRunOutputItemsRequestStatus(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalGetEvalRunOutputItemsRequestStatus Fail { get; } = new InternalGetEvalRunOutputItemsRequestStatus(FailValue);

        internal static InternalGetEvalRunOutputItemsRequestStatus Pass { get; } = new InternalGetEvalRunOutputItemsRequestStatus(PassValue);

        public static bool operator ==(InternalGetEvalRunOutputItemsRequestStatus left, InternalGetEvalRunOutputItemsRequestStatus right) => left.Equals(right);

        public static bool operator !=(InternalGetEvalRunOutputItemsRequestStatus left, InternalGetEvalRunOutputItemsRequestStatus right) => !left.Equals(right);

        public static implicit operator InternalGetEvalRunOutputItemsRequestStatus(string value) => new InternalGetEvalRunOutputItemsRequestStatus(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalGetEvalRunOutputItemsRequestStatus other && Equals(other);

        public bool Equals(InternalGetEvalRunOutputItemsRequestStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
