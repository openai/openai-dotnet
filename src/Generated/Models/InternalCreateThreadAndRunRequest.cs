// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.Assistants
{
    internal partial class InternalCreateThreadAndRunRequest
    {
        internal IDictionary<string, BinaryData> _serializedAdditionalRawData;

        public InternalCreateThreadAndRunRequest(string assistantId)
        {
            Argument.AssertNotNull(assistantId, nameof(assistantId));

            AssistantId = assistantId;
            Tools = new ChangeTrackingList<ToolDefinition>();
            Metadata = new ChangeTrackingDictionary<string, string>();
        }

        internal InternalCreateThreadAndRunRequest(string assistantId, ThreadCreationOptions thread, string model, string instructions, IList<ToolDefinition> tools, ToolResources toolResources, IDictionary<string, string> metadata, float? temperature, float? topP, bool? stream, int? maxPromptTokens, int? maxCompletionTokens, RunTruncationStrategy truncationStrategy, ToolConstraint toolChoice, bool? parallelToolCalls, AssistantResponseFormat responseFormat, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            AssistantId = assistantId;
            Thread = thread;
            Model = model;
            Instructions = instructions;
            Tools = tools;
            ToolResources = toolResources;
            Metadata = metadata;
            Temperature = temperature;
            TopP = topP;
            Stream = stream;
            MaxPromptTokens = maxPromptTokens;
            MaxCompletionTokens = maxCompletionTokens;
            TruncationStrategy = truncationStrategy;
            ToolChoice = toolChoice;
            ParallelToolCalls = parallelToolCalls;
            ResponseFormat = responseFormat;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        internal InternalCreateThreadAndRunRequest()
        {
        }

        public string AssistantId { get; }
        public ThreadCreationOptions Thread { get; set; }
        public string Instructions { get; set; }
        public IList<ToolDefinition> Tools { get; set; }
        public IDictionary<string, string> Metadata { get; set; }
        public float? Temperature { get; set; }
        public float? TopP { get; set; }
        public bool? Stream { get; set; }
        public int? MaxPromptTokens { get; set; }
        public int? MaxCompletionTokens { get; set; }
        public RunTruncationStrategy TruncationStrategy { get; set; }
        public bool? ParallelToolCalls { get; set; }
    }
}
