// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Assistants
{
    internal readonly partial struct InternalRunStepDetailsType : IEquatable<InternalRunStepDetailsType>
    {
        private readonly string _value;
        private const string MessageCreationValue = "message_creation";
        private const string ToolCallsValue = "tool_calls";

        public InternalRunStepDetailsType(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalRunStepDetailsType MessageCreation { get; } = new InternalRunStepDetailsType(MessageCreationValue);

        internal static InternalRunStepDetailsType ToolCalls { get; } = new InternalRunStepDetailsType(ToolCallsValue);

        public static bool operator ==(InternalRunStepDetailsType left, InternalRunStepDetailsType right) => left.Equals(right);

        public static bool operator !=(InternalRunStepDetailsType left, InternalRunStepDetailsType right) => !left.Equals(right);

        public static implicit operator InternalRunStepDetailsType(string value) => new InternalRunStepDetailsType(value);

        public static implicit operator InternalRunStepDetailsType?(string value) => value == null ? null : new InternalRunStepDetailsType(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalRunStepDetailsType other && Equals(other);

        public bool Equals(InternalRunStepDetailsType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
