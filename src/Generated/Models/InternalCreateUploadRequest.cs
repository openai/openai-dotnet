// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using OpenAI;

namespace OpenAI.Files
{
    internal partial class InternalCreateUploadRequest
    {
        private protected IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        public InternalCreateUploadRequest(string filename, InternalCreateUploadRequestPurpose purpose, int bytes, string mimeType)
        {
            Argument.AssertNotNull(filename, nameof(filename));
            Argument.AssertNotNull(mimeType, nameof(mimeType));

            Filename = filename;
            Purpose = purpose;
            Bytes = bytes;
            MimeType = mimeType;
        }

        internal InternalCreateUploadRequest(string filename, InternalCreateUploadRequestPurpose purpose, int bytes, string mimeType, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Filename = filename;
            Purpose = purpose;
            Bytes = bytes;
            MimeType = mimeType;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        public string Filename { get; }

        public InternalCreateUploadRequestPurpose Purpose { get; }

        public int Bytes { get; }

        public string MimeType { get; }

        internal IDictionary<string, BinaryData> SerializedAdditionalRawData
        {
            get => _additionalBinaryDataProperties;
            set => _additionalBinaryDataProperties = value;
        }
    }
}
