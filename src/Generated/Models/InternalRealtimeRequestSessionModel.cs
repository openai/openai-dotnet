// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Realtime
{
    internal readonly partial struct InternalRealtimeRequestSessionModel : IEquatable<InternalRealtimeRequestSessionModel>
    {
        private readonly string _value;
        private const string Gpt4oRealtimePreviewValue = "gpt-4o-realtime-preview";
        private const string Gpt4oRealtimePreview20241001Value = "gpt-4o-realtime-preview-2024-10-01";
        private const string Gpt4oRealtimePreview20241217Value = "gpt-4o-realtime-preview-2024-12-17";
        private const string Gpt4oMiniRealtimePreviewValue = "gpt-4o-mini-realtime-preview";
        private const string Gpt4oMiniRealtimePreview20241217Value = "gpt-4o-mini-realtime-preview-2024-12-17";

        public InternalRealtimeRequestSessionModel(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalRealtimeRequestSessionModel Gpt4oRealtimePreview { get; } = new InternalRealtimeRequestSessionModel(Gpt4oRealtimePreviewValue);

        internal static InternalRealtimeRequestSessionModel Gpt4oRealtimePreview20241001 { get; } = new InternalRealtimeRequestSessionModel(Gpt4oRealtimePreview20241001Value);

        internal static InternalRealtimeRequestSessionModel Gpt4oRealtimePreview20241217 { get; } = new InternalRealtimeRequestSessionModel(Gpt4oRealtimePreview20241217Value);

        internal static InternalRealtimeRequestSessionModel Gpt4oMiniRealtimePreview { get; } = new InternalRealtimeRequestSessionModel(Gpt4oMiniRealtimePreviewValue);

        internal static InternalRealtimeRequestSessionModel Gpt4oMiniRealtimePreview20241217 { get; } = new InternalRealtimeRequestSessionModel(Gpt4oMiniRealtimePreview20241217Value);

        public static bool operator ==(InternalRealtimeRequestSessionModel left, InternalRealtimeRequestSessionModel right) => left.Equals(right);

        public static bool operator !=(InternalRealtimeRequestSessionModel left, InternalRealtimeRequestSessionModel right) => !left.Equals(right);

        public static implicit operator InternalRealtimeRequestSessionModel(string value) => new InternalRealtimeRequestSessionModel(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalRealtimeRequestSessionModel other && Equals(other);

        public bool Equals(InternalRealtimeRequestSessionModel other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
