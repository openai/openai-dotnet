// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;

namespace OpenAI.Realtime
{
    internal readonly partial struct InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel : IEquatable<InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel>
    {
        private readonly string _value;
        private const string Gpt4oTranscribeValue = "gpt-4o-transcribe";
        private const string Gpt4oMiniTranscribeValue = "gpt-4o-mini-transcribe";
        private const string Whisper1Value = "whisper-1";

        public InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel(string value)
        {
            Argument.AssertNotNull(value, nameof(value));

            _value = value;
        }

        internal static InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel Gpt4oTranscribe { get; } = new InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel(Gpt4oTranscribeValue);

        internal static InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel Gpt4oMiniTranscribe { get; } = new InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel(Gpt4oMiniTranscribeValue);

        internal static InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel Whisper1 { get; } = new InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel(Whisper1Value);

        public static bool operator ==(InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel left, InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel right) => left.Equals(right);

        public static bool operator !=(InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel left, InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel right) => !left.Equals(right);

        public static implicit operator InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel(string value) => new InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel other && Equals(other);

        public bool Equals(InternalRealtimeTranscriptionSessionCreateRequestInputAudioTranscriptionModel other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;

        public override string ToString() => _value;
    }
}
