// <auto-generated/>

#nullable disable

using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using OpenAI;

namespace OpenAI.Conversations
{
    internal partial class ConversationClientGetConversationItemsAsyncCollectionResult : AsyncCollectionResult
    {
        private readonly ConversationClient _client;
        private readonly string _conversationId;
        private readonly long? _limit;
        private readonly string _order;
        private readonly string _after;
        private readonly IEnumerable<IncludedConversationItemProperty> _include;
        private readonly RequestOptions _options;

        public ConversationClientGetConversationItemsAsyncCollectionResult(ConversationClient client, string conversationId, long? limit, string order, string after, IEnumerable<IncludedConversationItemProperty> include, RequestOptions options)
        {
            Argument.AssertNotNullOrEmpty(conversationId, nameof(conversationId));

            _client = client;
            _conversationId = conversationId;
            _limit = limit;
            _order = order;
            _after = after;
            _include = include;
            _options = options;
        }

        public override async IAsyncEnumerable<ClientResult> GetRawPagesAsync()
        {
            PipelineMessage message = _client.CreateGetConversationItemsRequest(_conversationId, _limit, _order, _after, _include, _options);
            yield return ClientResult.FromResponse(await _client.Pipeline.ProcessMessageAsync(message, _options).ConfigureAwait(false));
        }

        public override ContinuationToken GetContinuationToken(ClientResult page)
        {
            return null;
        }
    }
}
